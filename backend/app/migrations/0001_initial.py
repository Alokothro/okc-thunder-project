# Generated by Django 5.2.6 on 2025-09-23 21:02

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActionType',
            fields=[
                ('action_type', models.CharField(choices=[('pickAndRoll', 'Pick & Roll'), ('isolation', 'Isolation'), ('postUp', 'Post-up'), ('offBallScreen', 'Off-Ball Screen'), ('transition', 'Transition'), ('putback', 'Putback'), ('spotUp', 'Spot Up')], max_length=30, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'action_types',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('abbreviation', models.CharField(blank=True, max_length=5, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('conference', models.CharField(blank=True, max_length=20, null=True)),
                ('division', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'teams',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='teams_name_12b53a_idx'), models.Index(fields=['team_id'], name='teams_team_id_212a0c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=150)),
                ('position', models.CharField(blank=True, max_length=5, null=True)),
                ('jersey_number', models.IntegerField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, help_text='Height in inches', null=True)),
                ('weight', models.FloatField(blank=True, help_text='Weight in pounds', null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='app.team')),
            ],
            options={
                'db_table': 'players',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.IntegerField(primary_key=True, serialize=False)),
                ('game_date', models.DateTimeField()),
                ('season', models.CharField(blank=True, max_length=20, null=True)),
                ('game_type', models.CharField(default='practice', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='app.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='app.team')),
            ],
            options={
                'db_table': 'games',
                'ordering': ['-game_date'],
            },
        ),
        migrations.CreateModel(
            name='Turnover',
            fields=[
                ('turnover_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_type', models.CharField(db_index=True, max_length=30)),
                ('tov_loc_x', models.FloatField()),
                ('tov_loc_y', models.FloatField()),
                ('turnover_type', models.CharField(blank=True, max_length=50, null=True)),
                ('quarter', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('time_remaining', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('forced_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forced_turnovers', to='app.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnovers', to='app.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnovers', to='app.player')),
            ],
            options={
                'db_table': 'turnovers',
                'ordering': ['game', 'quarter', '-time_remaining'],
            },
        ),
        migrations.CreateModel(
            name='Pass',
            fields=[
                ('pass_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_type', models.CharField(db_index=True, max_length=30)),
                ('ball_start_loc_x', models.FloatField()),
                ('ball_start_loc_y', models.FloatField()),
                ('ball_end_loc_x', models.FloatField()),
                ('ball_end_loc_y', models.FloatField()),
                ('completed_pass', models.BooleanField(default=True)),
                ('potential_assist', models.BooleanField(default=False)),
                ('turnover', models.BooleanField(default=False)),
                ('pass_distance', models.FloatField(blank=True, help_text='Pass distance in feet', null=True)),
                ('pass_speed', models.FloatField(blank=True, help_text='Estimated pass speed', null=True)),
                ('quarter', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('time_remaining', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passes', to='app.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passes', to='app.player')),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_passes', to='app.player')),
            ],
            options={
                'db_table': 'passes',
                'ordering': ['game', 'quarter', '-time_remaining'],
                'indexes': [models.Index(fields=['player', 'game'], name='passes_player__1da6e6_idx'), models.Index(fields=['game'], name='passes_game_id_7f19e8_idx'), models.Index(fields=['action_type'], name='passes_action__503d2a_idx'), models.Index(fields=['completed_pass'], name='passes_complet_d2fa08_idx'), models.Index(fields=['potential_assist'], name='passes_potenti_51bace_idx'), models.Index(fields=['turnover'], name='passes_turnove_8d428a_idx')],
            },
        ),
        migrations.CreateModel(
            name='PlayerGameStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_shots', models.IntegerField(default=0)),
                ('shots_made', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('field_goal_percentage', models.FloatField(default=0.0)),
                ('three_pointers_made', models.IntegerField(default=0)),
                ('three_pointers_attempted', models.IntegerField(default=0)),
                ('two_pointers_made', models.IntegerField(default=0)),
                ('two_pointers_attempted', models.IntegerField(default=0)),
                ('total_passes', models.IntegerField(default=0)),
                ('completed_passes', models.IntegerField(default=0)),
                ('potential_assists', models.IntegerField(default=0)),
                ('pass_completion_rate', models.FloatField(default=0.0)),
                ('total_turnovers', models.IntegerField(default=0)),
                ('passing_turnovers', models.IntegerField(default=0)),
                ('pick_and_roll_count', models.IntegerField(default=0)),
                ('isolation_count', models.IntegerField(default=0)),
                ('post_up_count', models.IntegerField(default=0)),
                ('off_ball_screen_count', models.IntegerField(default=0)),
                ('true_shooting_percentage', models.FloatField(default=0.0)),
                ('effective_field_goal_percentage', models.FloatField(default=0.0)),
                ('assist_to_turnover_ratio', models.FloatField(default=0.0)),
                ('usage_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_stats', to='app.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_stats', to='app.player')),
            ],
            options={
                'db_table': 'player_game_stats',
                'ordering': ['game', 'player'],
                'indexes': [models.Index(fields=['player', 'game'], name='player_game_player__a93cea_idx'), models.Index(fields=['total_points'], name='player_game_total_p_d1d8a2_idx'), models.Index(fields=['field_goal_percentage'], name='player_game_field_g_dc7367_idx')],
                'unique_together': {('player', 'game')},
            },
        ),
        migrations.CreateModel(
            name='PlayerSeasonStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(max_length=20)),
                ('games_played', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('total_shots', models.IntegerField(default=0)),
                ('total_passes', models.IntegerField(default=0)),
                ('total_assists', models.IntegerField(default=0)),
                ('total_turnovers', models.IntegerField(default=0)),
                ('ppg', models.FloatField(default=0.0, help_text='Points per game')),
                ('apg', models.FloatField(default=0.0, help_text='Assists per game')),
                ('tpg', models.FloatField(default=0.0, help_text='Turnovers per game')),
                ('fg_percentage', models.FloatField(default=0.0)),
                ('three_point_percentage', models.FloatField(default=0.0)),
                ('points_rank', models.IntegerField(blank=True, null=True)),
                ('assists_rank', models.IntegerField(blank=True, null=True)),
                ('fg_percentage_rank', models.IntegerField(blank=True, null=True)),
                ('efficiency_rank', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_stats', to='app.player')),
            ],
            options={
                'db_table': 'player_season_stats',
                'ordering': ['-total_points'],
                'indexes': [models.Index(fields=['player', 'season'], name='player_seas_player__9b983a_idx'), models.Index(fields=['total_points'], name='player_seas_total_p_32d0ac_idx'), models.Index(fields=['ppg'], name='player_seas_ppg_8c9a79_idx')],
                'unique_together': {('player', 'season')},
            },
        ),
        migrations.CreateModel(
            name='Shot',
            fields=[
                ('shot_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_type', models.CharField(db_index=True, max_length=30)),
                ('points', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('shot_loc_x', models.FloatField(help_text='X coordinate in feet from basket center')),
                ('shot_loc_y', models.FloatField(help_text='Y coordinate in feet from basket center')),
                ('shooting_foul_drawn', models.BooleanField(default=False)),
                ('shot_made', models.BooleanField(default=False)),
                ('shot_distance', models.FloatField(blank=True, help_text='Distance from basket in feet', null=True)),
                ('shot_angle', models.FloatField(blank=True, help_text='Angle from basket in degrees', null=True)),
                ('quarter', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('time_remaining', models.FloatField(blank=True, help_text='Seconds remaining in quarter', null=True)),
                ('shot_clock', models.FloatField(blank=True, help_text='Shot clock time', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shots', to='app.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shots', to='app.player')),
            ],
            options={
                'db_table': 'shots',
                'ordering': ['game', 'quarter', '-time_remaining'],
                'indexes': [models.Index(fields=['player', 'game'], name='shots_player__20e087_idx'), models.Index(fields=['game'], name='shots_game_id_02dc3e_idx'), models.Index(fields=['action_type'], name='shots_action__353446_idx'), models.Index(fields=['points'], name='shots_points_2ee89c_idx'), models.Index(fields=['shot_made'], name='shots_shot_ma_e39930_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['name'], name='players_name_0574eb_idx'),
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['team'], name='players_team_id_483bc4_idx'),
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['player_id'], name='players_player__819f19_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='player',
            unique_together={('player_id', 'team')},
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['game_date'], name='games_game_da_1318cb_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['home_team', 'away_team'], name='games_home_te_846fc0_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['game_id'], name='games_game_id_22ad49_idx'),
        ),
        migrations.AddIndex(
            model_name='turnover',
            index=models.Index(fields=['player', 'game'], name='turnovers_player__4b8d26_idx'),
        ),
        migrations.AddIndex(
            model_name='turnover',
            index=models.Index(fields=['game'], name='turnovers_game_id_745538_idx'),
        ),
        migrations.AddIndex(
            model_name='turnover',
            index=models.Index(fields=['action_type'], name='turnovers_action__24dcf2_idx'),
        ),
        migrations.AddIndex(
            model_name='turnover',
            index=models.Index(fields=['turnover_type'], name='turnovers_turnove_fb127f_idx'),
        ),
    ]
